{"version":3,"sources":["components/counter.tsx","modules/counter.ts","containers/counter_container.tsx","components/todos.tsx","modules/todos.ts","containers/todos_container.tsx","App.tsx","modules/index.ts","index.tsx"],"names":["Counter","count","onIncrease","onDecrease","onIncreaseBy","onClick","INCREASE","DECREASE","initialState","counter","state","action","type","payload","CounterContainer","useSelector","dispatch","useDispatch","diff","increaseBy","Item","todo","onRemoveTodo","onToggleTodo","id","text","done","className","style","backgroundColor","color","Todos","todos","listStyle","map","item","key","defaultValue","nextId","TodosContainer","todoInputRef","useRef","onAddTodo","addTodo","Container","onSubmit","e","preventDefault","current","value","ref","removeTodo","toggleTodo","styled","section","App","rootReducer","combineReducers","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.946ac961.chunk.js","sourcesContent":["import React from \"react\";\n\ntype CounterProps = {\n  count: number;\n  onIncrease: () => void;\n  onDecrease: () => void;\n  onIncreaseBy: (diff: number) => void;\n};\n\nexport default function Counter({\n  count,\n  onIncrease,\n  onDecrease,\n  onIncreaseBy,\n}: CounterProps) {\n  return (\n    <div>\n      <h1>{count}</h1>\n      <button onClick={onIncrease}>+1</button>\n      <button onClick={onDecrease}>-1</button>\n      <button onClick={() => onIncreaseBy(5)}>+5</button>\n    </div>\n  );\n}\n","const INCREASE = \"counter/INCREASE\" as const;\nconst DECREASE = \"counter/DECREASE\" as const;\nconst INCREASE_BY = \"counter/INCREASE_BY\" as const;\n\nexport const increase = () => ({ type: INCREASE });\nexport const decrease = () => ({ type: DECREASE });\nexport const increaseBy = (diff: number) => ({\n  type: INCREASE_BY,\n  payload: diff,\n});\n\ntype CounterState = {\n  count: number;\n};\n\nconst initialState: CounterState = {\n  count: 0,\n};\n\ntype CounterAction =\n  | ReturnType<typeof increase>\n  | ReturnType<typeof decrease>\n  | ReturnType<typeof increaseBy>;\n\nfunction counter(\n  state: CounterState = initialState,\n  action: CounterAction\n): CounterState {\n  switch (action.type) {\n    case INCREASE: {\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n    }\n    case DECREASE: {\n      return {\n        ...state,\n        count: state.count - 1,\n      };\n    }\n    case INCREASE_BY: {\n      return {\n        ...state,\n        count: state.count + action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default counter;\n","import React from \"react\";\nimport Counter from \"components/counter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"modules\";\nimport { decrease, increase, increaseBy } from \"modules/counter\";\n\nexport default function CounterContainer() {\n  const count = useSelector((state: RootState) => state.counter.count);\n  const dispatch = useDispatch();\n  const onIncrease = () => dispatch(increase());\n  const onDecrease = () => dispatch(decrease());\n  const onIncreaseBy = (diff: number) => {\n    dispatch(increaseBy(diff));\n  };\n  return (\n    <Counter\n      count={count}\n      onIncrease={onIncrease}\n      onDecrease={onDecrease}\n      onIncreaseBy={onIncreaseBy}\n    />\n  );\n}\n","import React from \"react\";\nimport { Todo } from \"modules/todos\";\n\ntype ItemProps = {\n  todo: Todo;\n  onRemoveTodo: (id: number) => void;\n  onToggleTodo: (id: number) => void;\n};\n\nfunction Item({ todo, onRemoveTodo, onToggleTodo }: ItemProps) {\n  const { id, text, done } = todo;\n  return (\n    <div\n      className={\"todo-card\"}\n      style={{\n        backgroundColor: `${done ? \"green\" : \"gray\"}`,\n        color: \"white\",\n      }}\n    >\n      <h2>\n        <span>{id}</span>\n      </h2>\n      <p>{text}</p>\n      <button\n        className=\"delete-button\"\n        onClick={() => {\n          onRemoveTodo(id);\n        }}\n      >\n        ‚ùå\n      </button>\n      <button\n        className=\"done-button\"\n        onClick={() => {\n          onToggleTodo(id);\n        }}\n      >\n        üî•\n      </button>\n    </div>\n  );\n}\n\ntype TodosProps = {\n  todos: Todo[];\n  onRemoveTodo: (id: number) => void;\n  onToggleTodo: (id: number) => void;\n};\nexport default function Todos({\n  todos,\n  onRemoveTodo,\n  onToggleTodo,\n}: TodosProps) {\n  return (\n    <ul style={{ listStyle: \"none\" }}>\n      {todos.map((item) => (\n        <li key={item.id}>\n          <Item\n            todo={item}\n            onRemoveTodo={onRemoveTodo}\n            onToggleTodo={onToggleTodo}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nTodos.defaultValue = {\n  todos: [],\n};\n","const ADD_TODO = \"ADD_TODO\" as const;\nconst REMOVE_TODO = \"REMOVE_TODO\" as const;\nconst TOGGLE_TODO = \"TOGGLE_TODO\" as const;\n\nlet nextId = 1;\n\nexport const addTodo = (text: string) => ({\n  type: ADD_TODO,\n  payload: {\n    id: nextId++,\n    text,\n    done: false,\n  },\n});\n\nexport const toggleTodo = (id: number) => ({\n  type: TOGGLE_TODO,\n  payload: id,\n});\n\nexport const removeTodo = (id: number) => ({\n  type: REMOVE_TODO,\n  payload: id,\n});\n\ntype ActionsTodo =\n  | ReturnType<typeof addTodo>\n  | ReturnType<typeof toggleTodo>\n  | ReturnType<typeof removeTodo>;\n\nexport type Todo = {\n  id: number;\n  text: string;\n  done: boolean;\n};\n\ntype TodosState = Todo[];\n\nconst initialState: TodosState = [\n  {\n    id: 0,\n    text: \"Hello world\",\n    done: true,\n  },\n];\n\nexport default function todo(\n  state: TodosState = initialState,\n  action: ActionsTodo\n): TodosState {\n  switch (action.type) {\n    case ADD_TODO: {\n      return state.concat({\n        id: action.payload.id,\n        text: action.payload.text,\n        done: action.payload.done,\n      });\n    }\n    case TOGGLE_TODO: {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        }\n        return todo;\n      });\n    }\n    case REMOVE_TODO: {\n      return state.filter((todo) => todo.id !== action.payload);\n    }\n\n    default:\n      return state;\n  }\n}\n","import React, { useRef } from \"react\";\nimport Todos from \"components/todos\";\nimport { RootState } from \"modules\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, removeTodo, toggleTodo } from \"modules/todos\";\nimport styled from \"styled-components\";\n\nexport default function TodosContainer() {\n  const todos = useSelector((state: RootState) => state.todos);\n  const dispatch = useDispatch();\n  const todoInputRef = useRef<HTMLInputElement>(null);\n\n  const onAddTodo = (text: string) => {\n    dispatch(addTodo(text));\n  };\n  const onRemoveTodo = (id: number) => {\n    dispatch(removeTodo(id));\n  };\n  const onToggleTodo = (id: number) => {\n    dispatch(toggleTodo(id));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (todoInputRef.current) {\n      const text = todoInputRef.current.value;\n      onAddTodo(text);\n      todoInputRef.current.value = \"\";\n    }\n  };\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <input className={\"todo-input\"} ref={todoInputRef} type=\"text\" />\n      </form>\n      <div className={\"container\"}>\n        <Todos\n          todos={todos}\n          onRemoveTodo={onRemoveTodo}\n          onToggleTodo={onToggleTodo}\n        />\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.section`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  width: 80%;\n  height: 500px;\n  background-color: hotpink;\n  margin: 0 auto;\n  overflow: hidden;\n\n  position: relative;\n\n  input[type=\"text\"].todo-input {\n    margin: 0 auto;\n    width: 100%;\n    height: 48px;\n    font-size: 32px;\n    padding: 0;\n    padding-left: 12px;\n    outline: none;\n  }\n\n  .container {\n    padding: 0 12px;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.8);\n    overflow: auto;\n    padding-bottom: 63px;\n  }\n  .container::-webkit-scrollbar {\n    display: none;\n  }\n\n  ul {\n    padding: 0;\n  }\n  li:first-child {\n    margin-top: 15px;\n  }\n  li {\n    margin-bottom: 15px;\n  }\n\n  h2 span {\n    display: block;\n    background-color: tomato;\n    height: 28px;\n    width: 28px;\n    text-align: center;\n    height: 28px;\n    border-bottom-right-radius: 5px;\n    border-top-left-radius: 5px;\n  }\n\n  p {\n    padding: 15px;\n    padding-top: 35px;\n    white-space: wrap;\n    word-break: break-all;\n  }\n  .todo-card {\n    border-radius: 5px;\n    position: relative;\n  }\n  button {\n    width: 28px;\n    height: 28px;\n  }\n  .delete-button {\n    position: absolute;\n    right: 5px;\n    top: 5px;\n  }\n  .done-button {\n    position: absolute;\n    right: 5px;\n    top: 35px;\n  }\n`;\n","import CounterContainer from \"containers/counter_container\";\nimport TodosContainer from \"containers/todos_container\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <>\n      <CounterContainer />\n      <TodosContainer />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport counter from \"./counter\";\nimport todos from \"./todos\";\n\nconst rootReducer = combineReducers({\n  counter,\n  todos,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"modules\";\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}